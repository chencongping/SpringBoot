server.port=8001
spring.application.name=dubbo-account-example

#====================================Dubbo config===============================================
dubbo.scan.base-packages=com.example.account.service
#-------- application shared config ----------
#协议BeanId，可以在<dubbo:service proivder="">中引用此ID
dubbo.application.id= dubbo-account-example
dubbo.application.name= dubbo-account-example
dubbo.application.version=1.0
#应用负责人，用于服务治理，请填写负责人公司邮箱前缀
dubbo.application.owner=houdongdong
#组织
dubbo.application.organization=example
#日志输出方式
dubbo.application.logger=slf4j
# 关闭运维QOS模块
dubbo.application.qosEnable=false
#-------- registry shared config ----------
#注册中心引用BeanId，可以在<dubbo:service registry="">或<dubbo:reference registry="">中引用此ID
dubbo.registry.id=dubbo-account-example-registry
#必选：注册中心服务器地址，如果地址没有端口缺省为9090，同一集群内的多个地址用逗号分隔，如：ip:port,ip:port
dubbo.registry.address=nacos://127.0.0.1:8848
#注册中心地址协议
#dubbo.registry.protocol=nacos
#注册中心缺省端口，当address没有带端口时使用此端口做为缺省值
#dubbo.registry.port=8848
#登录注册中心用户名，如果注册中心不需要验证可不填
#dubbo.registry.username=nacos
#dubbo.registry.password=nacos
#注册中心不存在时，是否报错
dubbo.registry.check=true
#注册中心请求超时时间(毫秒)
dubbo.registry.timeout=5000
#-------- protocol config ----------
#协议BeanId，可以在<dubbo:service protocol="">中引用此ID，如果ID不填，缺省和name属性值一样，重复则在name后加序号
dubbo.protocol.id=dubbo
#协议名称
dubbo.protocol.name=dubbo
#dubbo协议缺省端口为20880
dubbo.protocol.port=20881
# 线程池类型，可选：fixed/cached , 默认 fixed
dubbo.protocal.threadpool = cached
#服务线程池大小(固定大小) , 默认200
dubbo.protocal.threads = 200
#协议的服务端和客户端实现类型， 默认是 netty
dubbo.protocal.transporter = netty

#-------- provider config 当 Protocol 和 Service 某属性没有配置时，采用此缺省值 ----------
#负载均衡策略，可选值：random,roundrobin,leastactive，分别表示：随机，轮询，最少活跃调用
dubbo.provider.loadbalance= roundrobin
dubbo.provider.timeout=10000
dubbo.provider.version=0.0.1
#对于非幂等的操作不能使用重试机制
dubbo.provider.retries=0

#====================================mysql config===========================================
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/test?useSSL=false&useUnicode=true&characterEncoding=utf-8&allowMultiQueries=true
spring.datasource.username=root
spring.datasource.password=123456

#=====================================mybatis config======================================
mybatis.mapper-locations=classpath*:/mappers/*.xml

#====================================druid config===============================================

#====================================seata config===============================================
seata.enabled=true
seata.application-id=dubbo-account-example
seata.tx-service-group=my_test_tx_group
seata.enable-auto-data-source-proxy=true
seata.use-jdk-proxy=false


seata.client.rm.async-commit-buffer-limit=1000
seata.client.rm.report-retry-count=5
seata.client.rm.table-meta-check-enable=false
seata.client.rm.report-success-enable=false
seata.client.rm.lock.retry-interval=10
seata.client.rm.lock.retry-times=30
seata.client.rm.lock.retry-policy-branch-rollback-on-conflict=true
seata.client.tm.commit-retry-count=5
seata.client.tm.rollback-retry-count=5
seata.client.undo.data-validation=true
seata.client.undo.log-serialization=jackson
seata.client.undo.log-table=undo_log
seata.client.log.exceptionRate=100

seata.service.vgroup-mapping.my_test_tx_group=default
seata.service.grouplist.default=127.0.0.1:6091
seata.service.enable-degrade=false
seata.service.disable-global-transaction=false

seata.transport.type=TCP
seata.transport.server=NIO
seata.transport.heartbeat=true
seata.transport.serialization=seata
seata.transport.compressor=none
seata.transport.enable-client-batch-send-request=true
seata.transport.shutdown.wait=3
seata.transport.thread-factory.boss-thread-prefix=NettyBoss
seata.transport.thread-factory.worker-thread-prefix=NettyServerNIOWorker
seata.transport.thread-factory.server-executor-thread-prefix=NettyServerBizHandler
seata.transport.thread-factory.share-boss-worker=false
seata.transport.thread-factory.client-selector-thread-prefix=NettyClientSelector
seata.transport.thread-factory.client-selector-thread-size=1
seata.transport.thread-factory.client-worker-thread-prefix=NettyClientWorkerThread
seata.transport.thread-factory.worker-thread-size=default
seata.transport.thread-factory.boss-thread-size=1



