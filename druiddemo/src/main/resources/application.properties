
#server.servlet.context-path=/demo

#management.endpoints.web.exposure.include=*

mybatis.mapper-locations=classpath:mapper/*Mapper.xml

# 开启 debug log
logging.level.com.example.druiddemo.dao=debug
logging.config=classpath:logback-spring.xml
#logging.config=classpath:log4j2-spring.xml

# 数据源配置
#spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/test
spring.datasource.username=root
spring.datasource.password=123456
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource

### 连接池配置
#配置初始化大小/最小/最大
spring.datasource.druid.initial-size= 1
spring.datasource.druid.min-idle= 1
spring.datasource.druid.max-active= 20
#获取连接等待超时时间
spring.datasource.druid.max-wait= 60000
#间隔多久进行一次检测，检测需要关闭的空闲连接
spring.datasource.druid.time-between-eviction-runs-millis= 60000
#一个连接在池中最小生存的时间
spring.datasource.druid.min-evictable-idle-time-millis= 300000
#检测数据库连接是否有效，如果validationQuery为null，testOnBorrow、testOnReturn、testWhileIdle都不会起作用
spring.datasource.druid.validation-query= SELECT 'x'
spring.datasource.druid.test-on-borrow= false
spring.datasource.druid.test-on-return= false
spring.datasource.druid.test-while-idle= true
#打开PSCache，并指定每个连接上PSCache的大小。oracle设为true，mysql设为false。分库分表较多推荐设置为false
spring.datasource.druid.pool-prepared-statements= false
spring.datasource.druid.max-pool-prepared-statement-per-connection-size= 20


### 启用内置 Filter, 这里启用了 stat - 统计（监控），wall-防火墙, slf4j - 日志
spring.datasource.druid.filters=stat,wall,slf4j

### 监控配置
# 合并SQL
spring.datasource.druid.filter.stat.merge-sql=true
# 慢SQL记录日志, 超过10毫秒
spring.datasource.druid.filter.stat.slow-sql-millis=10
spring.datasource.druid.filter.stat.log-slow-sql=true
# 缺省多个DruidDataSource的监控数据是各自独立的，支持配置公用监控数据
#spring.datasource.druid.use-global-data-source-stat=true
# 持久化 Druid的监控记录, 5分钟存一次
spring.datasource.druid.time-between-log-stats-millis=300000
#spring.datasource.druid.stat-logger-class-name=com.example.druiddemo.config.LocalStatLogger

### 日志配置
#所有DataSource相关的日志
spring.datasource.druid.filter.slf4j.data-source-log-enabled=true
#所有连接相关的日志
spring.datasource.druid.filter.slf4j.connection-log-enabled=true
#返回值相关的日志
spring.datasource.druid.filter.slf4j.result-set-log-enabled=true
#所有Statement相关的日志
spring.datasource.druid.filter.slf4j.statement-log-enabled=true
# 输出可执行的SQL
spring.datasource.druid.filter.slf4j.statement-executable-sql-log-enable=true



